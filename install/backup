#!/bin/bash

# uncomment for debug
#set -x

# can be added to with subsequent '-o' at runtime
SYNC_OPTS="-urpq"
ERR_FILE="backup_errs.log"

error_trig() {
	printf "%s\n" "$1" 1>&2
	exit 1
}

backup() {
	printf "%s\n" "Running backup..."
	rsync $SYNC_OPTS "$1" "$2" 2> $ERR_FILE 
	if [[ ! "$?" = "0" ]]; then
		# something went wrong
		error_trig "Error occurred while backing up. Check messages in $ERR_FILE"
	fi
}

make_dir() {
	while true; do
		read -p "$1 doesn't exist, create it? [Y/n] " yn
		case $yn in
			[Yy])
				mkdir -p "$1"
				break
				;;
			[Nn])
				error_trig "Please create destination dir and try again."
				;;
			*)
				printf "%s\n" "Please enter [Yy] or [Nn]"
				;;
		esac
	done
}

check_dirs() {
	if [[ -e "$1" ]]; then
		if [[ ! -e "$2" ]]; then
			make_dir "$2"
		fi
	else
		error_trig "Error: $1 doesn't exist."
	fi
}

do_backup_with_args() {	
	check_dirs "$1" "$2"
	
	# no errors at this point, do backup
	backup "$1" "$2"
}

do_backup_wo_args() {
	read -p 'Source: ' src
	read -p 'Destination: ' dest
	
	check_dirs $src $dest
	
	# no errors at this point, do backup
	backup "$src" "$dest"
}

usage() {
	printf "%s\n" "Usage: backup [OPTIONS] [SRC DEST]"
	printf "%s\n" "Examples:     backup $HOME/bin /tmp/backup"
	printf "%s\n" "              backup"
	printf "%s\n" "Options:"
	printf "%s\n" "-h            Print this help."
}

get_args() {
	if [[ $# -gt 2 ]]; then
		error_trig "Wrong number of arguments. Run with '-h' for help"
	elif [[ $# -eq 1 && "$1" == "-h" ]]; then
		usage
		exit 1
	elif [[ $# -eq 2 ]]; then
		do_backup_with_args "$1" "$2"
	elif [[ $# -eq 0 ]]; then
		do_backup_wo_args
	else
		error_trig "Wrong number of arguments. Run with '-h' for help"
	fi
}

main() {
	get_args "$@"

	printf "\n%s\n" "Success!"
}

main "$@"
